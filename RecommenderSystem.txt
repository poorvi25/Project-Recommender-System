Recommender System:

Types:


1. Content  - based on content (tags)
2. Collabritive filtering - based on users similarities
3. Hybrid - based on above both


CONTENT BASED(PROJECT)

1. DATA PREPROCESSING:
   - Useful columns from movies dataset
     - id
     -genre
     -keyword
     -title
     -overview
     -cast
     -crew

     new data frame
     -movied_id | title | tags
     -tag = Add(overview, genre, cast(top), crew, keywords)

     -genre, keyword is in diff format use a func to convert them in needed format
     -cast: from cast we want top3 actors of movie
     -from crew col we only want one having job director
     -concat all list(columns) and conver to string  -->tag
     -remove spaces between words as,(apply transform func)
      (sam abc and sam def then recommender will confuse, have to conver to samabc samdef)

     operation on tag col:
     -converting each row of tags to vector WORDS (Using sklearn countvectorizer)
     -we can suggest movie by following its closst vector

    we have 4806 movies means 4806 vectors-
    now w have to calculate distance between 2 movies, larger the distance less the similarities
    --cosine distance is most reliable

for app:
library stream lit-

to run:
streamlit run filename.py

pickle library--
to send data from python file to web page file

make pickle file in ds project
copy in pycharm app project